{"version":3,"sources":["Movies.js","actions/index.js","actions/constant.js","App.js","reducers.js","index.js"],"names":["connect","state","ownProps","movies","dispatch","handleAdd","index","type","AddAction","handleRemove","RemoveAction","props","react_default","a","createElement","react","className","mylist","map","item","key","id","onMouseOver","handleShow","onMouseOut","handleOut","title","src","img","alt","hide","onClick","displayBtn","recommendations","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","console","log","setState","bind","assertThisInitialized","src_Movies","Component","defaultState","data","moviesReducer","arguments","length","undefined","action","newState","JSON","parse","stringify","removeItem","splice","push","addItem","store","createStore","reducers","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0f44aca4.chunk.js","sourcesContent":["import React, {Fragment} from 'react';\r\nimport {AddAction, RemoveAction} from './actions/index';\r\nimport {connect} from 'react-redux';\r\nimport './style/movies.css';\r\n\r\n\r\nconst Movies = (props) => {\r\n    return(\r\n        <Fragment>\r\n            <div>\r\n              <h2>Mylist:</h2>\r\n            </div>\r\n            <div className = 'Movie_box'>\r\n            {props.movies.mylist.map((item,index)=>(\r\n               <div key={item.id} onMouseOver={()=>props.handleShow(item.id)} \r\n               onMouseOut = {props.handleOut}>\r\n                  <div className='title'>{item.title}</div>\r\n                  <div><img src={item.img} alt='mylist' \r\n                  \r\n                  /></div>\r\n                  \r\n                  <button className={\r\n                    \r\n                      (props.hide===(item.id))?'show':'hide'\r\n                    \r\n                    } onClick={()=>{\r\n                   props.handleRemove(index)\r\n                  }}>Remove</button>\r\n               </div>\r\n\r\n            ))}\r\n            </div>\r\n\r\n\r\n            <div>\r\n              <h2>Recommendations:</h2>\r\n            </div>\r\n            <div className = 'Movie_box' onMouseOver={props.displayBtn}>\r\n            {props.movies.recommendations.map((item,index)=>(\r\n               <div key={item.id} onMouseOver={()=>props.handleShow(item.id)} \r\n               onMouseOut = {props.handleOut}>\r\n                  <div className='title'>{item.title}</div>\r\n                  <div><img src={item.img} alt='recommendations' /></div>\r\n                  <button className={\r\n                      (props.hide===(item.id))?'show':'hide'\r\n                    \r\n                  } onClick={()=>{\r\n                      props.handleAdd(index)\r\n                  }}>Add</button>\r\n            </div>\r\n            ))}\r\n        </div>\r\n\r\n        <h2>My List Titles</h2>\r\n        <ul>\r\n        {props.movies.mylist.map((item) => {\r\n            \r\n            return <li key = {item.id}>{item.title}</li>\r\n\r\n        })}\r\n        </ul>\r\n    </Fragment>\r\n    )\r\n    }\r\n    \r\n  \r\n\r\nconst mapStateToProps = (state, ownProps)=>{\r\n     return{\r\n        movies: state\r\n \r\n     }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) =>{\r\n   return{\r\n       handleAdd: (index)=>{\r\n        dispatch(AddAction(index))\r\n       },\r\n       handleRemove: (index)=>{\r\n           dispatch(RemoveAction(index))\r\n       }\r\n   }    \r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Movies)","import {ADD, REMOVE} from './constant';\r\n\r\nexport const AddAction =(index)=>{\r\n    return{\r\n        type: ADD,\r\n        index\r\n    }\r\n\r\n}\r\n\r\nexport const RemoveAction =(index)=>{\r\n    return{\r\n        type: REMOVE,\r\n        index\r\n    }\r\n}","export const ADD = 'ADD';\r\nexport const REMOVE = 'REMOVE';","import React, { Component } from 'react';\nimport Movies from './Movies' \n\n\nclass App extends Component {\n    constructor(props){\n      super(props)\n      this.state={\n        \n        hide: null\n      }\n     \n     this.handleShow = this.handleShow.bind(this)\n    }\n\n  handleShow =(id)=>{\n    console.log(id);\n    this.setState({\n      hide: id\n    })\n  }\n\n  handleOut = () =>{\n    this.setState({\n      hide: 1000000\n    })\n  }\n  \n  render() {\n    return (\n      <div>\n        <Movies \n          \n           handleShow={this.handleShow}\n           handleOut = {this.handleOut}\n           hide={this.state.hide}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import {ADD, REMOVE} from './actions/constant';\r\nimport data from './data/data.json';\r\n\r\nconst defaultState ={\r\n     mylist: data.mylist,\r\n     recommendations: data.recommendations\r\n}\r\n\r\nconst moviesReducer = (state=defaultState, action) =>{\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    \r\n    switch(action.type){\r\n        case REMOVE: \r\n          const removeItem=newState.mylist.splice(action.index, 1);\r\n          newState.recommendations.push(removeItem[0]);\r\n          return newState;\r\n        \r\n          case ADD: \r\n          const addItem = newState.recommendations.splice(action.index,1);\r\n          newState.mylist.push(addItem[0]);\r\n         return newState;\r\n\r\n        default:\r\n        return state\r\n    }\r\n} \r\n\r\n\r\nexport default moviesReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport App from './App';\nimport reducers from './reducers'\n\nconst store = createStore(reducers);\n\nReactDOM.render(\n<Provider store={store}>\n   <App />\n</Provider>,\ndocument.getElementById('root')\n);\n\n"],"sourceRoot":""}